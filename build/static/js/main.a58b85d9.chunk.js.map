{"version":3,"sources":["components/Login.jsx","components/Signup.jsx","components/Projects.jsx","components/Menu.jsx","components/Todos.jsx","components/Line.jsx","components/Home.jsx","App.jsx","index.js"],"names":["Login","state","username","password","redirectTo","writeText","e","_this","setState","Object","defineProperty","target","name","value","logIn","preventDefault","props","login","this","react_default","a","createElement","Redirect","to","pathname","className","Container","text","Form","Field","htmlFor","type","onChange","Button","basic","color","onClick","content","disabled","length","Component","Signup","confirmPassword","event","signUp","_this$state","axios","post","then","response","data","errmsg","console","log","Projects","displayProjects","projects","react_beautiful_dnd_esm","onDragEnd","projectLocation","moveProject","droppableId","key","provieded","snapshot","assign","droppableProps","ref","innerRef","style","textAlign","background","isDraggingOver","padding","minHeight","minWidth","filter","project","reverse","map","index","_id","draggableId","provided","ProjectItem","draggableProps","dragHandleProps","Table","Row","ProjectText","Cell","Link","concat","collapsing","icon","deleteProject","_this2","Fragment","Divider","horizontal","containerStyle","projectText","writeProject","addProject","celled","Body","React","styled","div","_templateObject","_templateObject2","width","height","verticalAlign","Menu","sidebarOpen","onSetSidebarOpen","open","loggedIn","logout","ProjectMenuClosed","index_es","faBars","react_sidebar_esm","sidebar","ProjectMenuOpen","components_Projects","updateProject","onSetOpen","styles","sidebarStyles","Menu_templateObject","Menu_templateObject2","margin","top","bottom","Todos","displayTodos","todos","URL","window","location","href","endURL","split","todoLocation","moveTodo","todo","complete","TodoItem","completeTodo","TodoText","textDecoration","deleteTodo","displayCompleteTodos","todoText","writeTodo","addTodo","Todos_templateObject","Todos_templateObject2","Line","useCanvas","graphMaker","count","dateConverter","completeDate","sort","b","push","x","y","date","months","Jan","Feb","March","April","May","June","July","Aug","Sept","Oct","Nov","Dec","finalDate","join","BarSeries","VerticalBarSeriesCanvas","VerticalBarSeries","Chart","es","xType","xDistance","yDomain","Line_templateObject","Home","error","getProjects","oldState","objectSpread","get","res","newState","catch","err","getTodos","substr","lastIndexOf","Date","id","delete","put","destination","source","movedTodo","splice","movedProject","nextProps","user","defaultState","components_Menu","HomeText","Line_Line","components_Todos","updateTodo","Home_templateObject","App","componentDidMount","status","Route","path","render","components_Home","exact","components_Login","components_Signup","ReactDOM","BrowserRouter","src_App_0","document","getElementById"],"mappings":"yTAsEeA,6MAjEbC,MAAQ,CACNC,SAAU,GACVC,SAAU,GACVC,WAAY,QAGdC,UAAY,SAAAC,GACVC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGH,EAAEK,OAAOC,KAAON,EAAEK,OAAOE,WAI9BC,MAAQ,SAAAR,GACNA,EAAES,iBACFR,EAAKS,MAAMC,MAAMV,EAAKN,MAAMC,SAAUK,EAAKN,MAAME,UACjDI,EAAKC,SAAS,CACZJ,WAAY,+EAKd,OAAIc,KAAKjB,MAAMG,WACNe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAI,CAAEC,SAAUN,KAAKjB,MAAMG,cAG1Ce,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAWC,MAAI,GACbR,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACO,EAAA,EAAKC,MAAN,KACEV,EAAAC,EAAAC,cAAA,SAAOS,QAAQ,YAAf,cACAX,EAAAC,EAAAC,cAAA,SACEU,KAAK,OACLnB,KAAK,WACLC,MAAOK,KAAKjB,MAAMC,SAClB8B,SAAUd,KAAKb,aAGnBc,EAAAC,EAAAC,cAACO,EAAA,EAAKC,MAAN,KACEV,EAAAC,EAAAC,cAAA,SAAOS,QAAQ,YAAf,cACAX,EAAAC,EAAAC,cAAA,SACEU,KAAK,WACLnB,KAAK,WACLC,MAAOK,KAAKjB,MAAME,SAClB6B,SAAUd,KAAKb,aAGnBc,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,OAAO,EACPC,MAAO,OACPC,QAASlB,KAAKJ,MACduB,QAAS,QACTC,SACiC,IAA/BpB,KAAKjB,MAAMC,SAASqC,QACW,IAA/BrB,KAAKjB,MAAME,SAASoC,mBAvDlBC,aCiGLC,6MA/FbxC,MAAQ,CACNC,SAAU,GACVC,SAAU,GACVuC,gBAAiB,GACjBtC,WAAY,QAGdC,UAAY,SAAAsC,GACVpC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGkC,EAAMhC,OAAOC,KAAO+B,EAAMhC,OAAOE,WAItC+B,OAAS,SAAAD,GAAS,IAAAE,EACgCtC,EAAKN,MAA7CC,EADQ2C,EACR3C,SAAUC,EADF0C,EACE1C,SAAUuC,EADZG,EACYH,gBAC5BC,EAAM5B,iBAEJb,GACAA,EAASqC,OAAS,GAClBpC,GACAA,EAASoC,OAAS,GAClBG,GACAA,EAAgBH,OAAS,GAEzBO,IACGC,KAAK,eAAgB,CACpB7C,SAAUK,EAAKN,MAAMC,SACrBC,SAAUI,EAAKN,MAAME,WAEtB6C,KAAK,SAAAC,GACCA,EAASC,KAAKC,OAMjBC,QAAQC,IAAIJ,EAASC,KAAKC,QAJ1B5C,EAAKC,SAAS,CACZJ,WAAY,iFAStB,OAAIc,KAAKjB,MAAMG,WACNe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAI,CAAEC,SAAUN,KAAKjB,MAAMG,cAG5Ce,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAWC,MAAI,GACbR,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACO,EAAA,EAAKC,MAAN,KACEV,EAAAC,EAAAC,cAAA,SAAOS,QAAQ,YAAf,cACAX,EAAAC,EAAAC,cAAA,SACEU,KAAK,OACLnB,KAAK,WACLC,MAAOK,KAAKjB,MAAMC,SAClB8B,SAAUd,KAAKb,aAGnBc,EAAAC,EAAAC,cAACO,EAAA,EAAKC,MAAN,KACEV,EAAAC,EAAAC,cAAA,SAAOS,QAAQ,YAAf,cACAX,EAAAC,EAAAC,cAAA,SACEU,KAAK,WACLnB,KAAK,WACLC,MAAOK,KAAKjB,MAAME,SAClB6B,SAAUd,KAAKb,aAGnBc,EAAAC,EAAAC,cAACO,EAAA,EAAKC,MAAN,KACEV,EAAAC,EAAAC,cAAA,SAAOS,QAAQ,mBAAf,sBACAX,EAAAC,EAAAC,cAAA,SACEU,KAAK,WACLnB,KAAK,kBACLC,MAAOK,KAAKjB,MAAMyC,gBAClBV,SAAUd,KAAKb,aAGnBc,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,OAAO,EACPC,MAAO,OACPC,QAASlB,KAAK0B,OACdP,QAAS,UACTC,SACiC,IAA/BpB,KAAKjB,MAAMC,SAASqC,QACW,IAA/BrB,KAAKjB,MAAME,SAASoC,QACkB,IAAtCrB,KAAKjB,MAAMyC,gBAAgBH,mBAtFtBC,mcCmHNc,6MA5EbC,gBAAkB,SAACC,EAAUtD,GAC3B,OACEiB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEC,UAAW,SAAAC,GAAe,OAAIpD,EAAKS,MAAM4C,YAAYD,KAErDxC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAWI,YAAa,eAAgBC,IAAK,gBAC1C,SAACC,EAAWC,GACX,OACE7C,EAAAC,EAAAC,cAAA,MAAAZ,OAAAwD,OAAA,GACMF,EAAUG,eADhB,CAEEC,IAAKJ,EAAUK,SACfC,MAAO,CACLC,UAAW,SACXC,WAAYP,EAASQ,eAAiB,YAAc,QACpDC,QAAS,IACTC,UAAwC,IAA7BnE,EAAKS,MAAMwC,SAASjB,OAC/BoC,SAAU,OAGXnB,EACEoB,OAAO,SAAAC,GAAO,OAAIA,EAAQ3E,WAAaK,EAAKS,MAAMd,WAClD4E,UACAC,IAAI,SAACF,EAASG,GACb,OACE7D,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEK,IAAKe,EAAQI,IACbC,YAAaL,EAAQI,IACrBD,MAAOA,GAEN,SAACG,EAAUnB,GACV,OACE7C,EAAAC,EAAAC,cAAC+D,EAAD3E,OAAAwD,OAAA,CACEE,IAAKgB,EAASf,UACVe,EAASE,eACTF,EAASG,iBAEbnE,EAAAC,EAAAC,cAACkE,EAAA,EAAMC,IAAP,CAAWnB,MAAO,CAAEE,WAAY,UAC9BpD,EAAAC,EAAAC,cAACoE,EAAD,KACEtE,EAAAC,EAAAC,cAACkE,EAAA,EAAMG,KAAP,KACEvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMpE,GAAE,GAAAqE,OAAKf,EAAQI,MACnB9D,EAAAC,EAAAC,cAAA,UAAKwD,EAAQhE,UAInBM,EAAAC,EAAAC,cAACkE,EAAA,EAAMG,KAAP,CACErB,MAAO,CACLC,UAAW,SAEbuB,YAAU,GAEV1E,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,OAAO,EACPC,MAAO,MACP2D,KAAM,QACN1D,QAAS,kBACP7B,EAAKS,MAAM+E,cAAclB,EAAQI,MAEnC3C,SAAUpC,IAAa2E,EAAQ3E,+FA9FxD,IAAA8F,EAAA9E,KACP,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAM6E,SAAP,KACE9E,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMpE,GAAG,IAAIE,UAAU,YACrBN,EAAAC,EAAAC,cAAA,mBAEFF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAASC,YAAU,GACjBhF,EAAAC,EAAAC,cAAA,qCAEFF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAWC,MAAI,EAAC0C,MAAO+B,GACrBjF,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACO,EAAA,EAAKC,MAAN,KACEV,EAAAC,EAAAC,cAAA,SACEU,KAAK,OACLlB,MAAOK,KAAKF,MAAMqF,YAClBrE,SAAU,SAAA1B,GAAC,OAAI0F,EAAKhF,MAAMsF,aAAahG,OAG3Ca,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,OAAO,EACPC,MAAO,QACPC,QAAS,kBAAM4D,EAAKhF,MAAMuF,WAAWP,EAAKhF,MAAMqF,cAChDhE,QAAS,MACTyD,KAAM,UAGV3E,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOiB,QAAM,GACXrF,EAAAC,EAAAC,cAACkE,EAAA,EAAMkB,KAAP,KACGvF,KAAKqC,gBAAgBrC,KAAKF,MAAMwC,SAAUtC,KAAKF,MAAMd,qBA9B7CwG,IAAMlE,WAoHvB4C,EAAcuB,IAAOC,IAAVC,KAQXpB,EAAckB,IAAOC,IAAVE,KAQXV,EAAiB,CACrBW,MAAO,OACPC,OAAQ,OACRC,cAAe,+WC3CFC,6MAzFbjH,MAAQ,CACNkH,aAAa,KAGfC,iBAAmB,SAAAC,GACjB9G,EAAKC,SAAS,CAAE2G,YAAaE,6EAGtB,IAAArB,EAAA9E,KACP,OAAIA,KAAKF,MAAMsG,WAAuC,IAA3BpG,KAAKjB,MAAMkH,YAElChG,EAAAC,EAAAC,cAAA,MAAII,UAAU,OACZN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMpE,GAAG,SAASE,UAAU,WAAWW,QAASlB,KAAKF,MAAMuG,QAA3D,WAIFpG,EAAAC,EAAAC,cAACmG,EAAD,KACErG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQe,QAAS,kBAAM4D,EAAKoB,kBAAiB,KAC3CjG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAiB3B,KAAM4B,UAMxBxG,KAAKF,MAAMsG,WAAuC,IAA3BpG,KAAKjB,MAAMkH,YAEzChG,EAAAC,EAAAC,cAACF,EAAAC,EAAM6E,SAAP,KACE9E,EAAAC,EAAAC,cAAA,MAAII,UAAU,OACZN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CACEpE,GAAG,SACHE,UAAU,WACVW,QAASlB,KAAKF,MAAMuG,QAHtB,YASJpG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEC,QACEzG,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,MAAII,UAAU,OACZN,EAAAC,EAAAC,cAACwG,EAAD,KACE1G,EAAAC,EAAAC,cAAA,UAAQe,QAAS,kBAAM4D,EAAKoB,kBAAiB,KAC3CjG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAiB3B,KAAM4B,SAI7BvG,EAAAC,EAAAC,cAACyG,EAAD,CACEtE,SAAUtC,KAAKF,MAAMwC,SACrBtD,SAAUgB,KAAKF,MAAMd,SACrBqG,WAAYrF,KAAKF,MAAMuF,WACvBwB,cAAe7G,KAAKF,MAAM+G,cAC1BhC,cAAe7E,KAAKF,MAAM+E,cAC1BnC,YAAa1C,KAAKF,MAAM4C,YACxByC,YAAanF,KAAKF,MAAMqF,YACxBC,aAAcpF,KAAKF,MAAMsF,gBAI/Be,KAAMnG,KAAKjB,MAAMkH,YACjBa,UAAW9G,KAAKkG,iBAChBa,OAAQC,KAKXhH,KAAKF,MAAMsG,cAAhB,EAEInG,EAAAC,EAAAC,cAAA,MAAII,UAAU,OACZN,EAAAC,EAAAC,cAAA,MAAII,UAAU,YACZN,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMpE,GAAG,SAASE,UAAU,YAA5B,UAIFN,EAAAC,EAAAC,cAAA,MAAII,UAAU,YACZN,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMpE,GAAG,UAAUE,UAAU,YAA7B,oBAhFOiF,IAAMlE,WA4FnBgF,EAAoBb,IAAOC,IAAVuB,KAQjBN,EAAkBlB,IAAOC,IAAVwB,KAQfF,EAAgB,CACpBN,QAAS,CACPS,OAAQ,OACR9D,WAAY,QACZwC,MAAO,IACPuB,IAAK,EACLC,OAAQ,gXCkJGC,6MAlObC,aAAe,SAACC,EAAOxI,GACrB,IAAIyI,EAAMC,OAAOC,SAASC,KAEpBC,GADNJ,EAAMA,EAAIK,MAAM,MACGL,EAAIpG,OAAS,GAEhC,OACEpB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEC,UAAW,SAAAuF,GAAY,OAAI1I,EAAKS,MAAMkI,SAASD,KAE/C9H,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAWI,YAAa,YAAaC,IAAK,aACvC,SAACC,EAAWC,GACX,OACE7C,EAAAC,EAAAC,cAAA,MAAAZ,OAAAwD,OAAA,GACMF,EAAUG,eADhB,CAEEC,IAAKJ,EAAUK,SACfC,MAAO,CACLC,UAAW,SACXC,WAAYP,EAASQ,eAAiB,YAAc,QACpDC,QAAS,IACTC,UAGa,IAFXnE,EAAKS,MAAM0H,MAAM9D,OACf,SAAAuE,GAAI,OAAsB,IAAlBA,EAAKC,UAAsBD,EAAKtE,UAAYkE,IACpDxG,UAGLmG,EACE9D,OACC,SAAAuE,GAAI,OAAsB,IAAlBA,EAAKC,UAAsBD,EAAKtE,UAAYkE,IAErDjE,UACAC,IAAI,SAACoE,EAAMnE,GACV,OACE7D,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEK,IAAKqF,EAAKlE,IACVC,YAAaiE,EAAKlE,IAClBD,MAAOA,GAEN,SAACG,EAAUnB,GACV,OACE7C,EAAAC,EAAAC,cAACgI,EAAD5I,OAAAwD,OAAA,CACEE,IAAKgB,EAASf,UACVe,EAASE,eACTF,EAASG,iBAEbnE,EAAAC,EAAAC,cAACkE,EAAA,EAAMC,IAAP,KACErE,EAAAC,EAAAC,cAACkE,EAAA,EAAMG,KAAP,CACErB,MAAO,CACLC,UAAW,SAEbuB,YAAU,GAEV1E,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,OAAO,EACPC,MAAO,QACP2D,KAAM,QACN1D,QAAS,kBACP7B,EAAKS,MAAMsI,aACTH,EAAKlE,IACLkE,EAAKC,WAGT9G,SAAUpC,IAAaiJ,EAAKjJ,YAGhCiB,EAAAC,EAAAC,cAACkI,EAAD,MAEqB,IAAlBJ,EAAKC,SACJjI,EAAAC,EAAAC,cAAA,MACEgD,MAAO,CACLmF,eAAgB,iBAGjBL,EAAKtI,OAGRM,EAAAC,EAAAC,cAAA,UAAK8H,EAAKtI,QAIdM,EAAAC,EAAAC,cAACkE,EAAA,EAAMG,KAAP,CACErB,MAAO,CACLC,UAAW,SAEbuB,YAAU,GAEV1E,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,OAAO,EACPC,MAAO,MACP2D,KAAM,QACN1D,QAAS,kBACP7B,EAAKS,MAAMyI,WAAWN,EAAKlE,MAE7B3C,SAAUpC,IAAaiJ,EAAKjJ,yBAkB9DwJ,qBAAuB,SAAChB,EAAOxI,GAC7B,IAAIyI,EAAMC,OAAOC,SAASC,KAEpBC,GADNJ,EAAMA,EAAIK,MAAM,MACGL,EAAIpG,OAAS,GAEhC,OACEpB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEC,UAAW,SAAAuF,GAAY,OAAI1I,EAAKS,MAAMkI,SAASD,KAE/C9H,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAWI,YAAa,YAAaC,IAAK,aACvC,SAACC,EAAWC,GACX,OACE7C,EAAAC,EAAAC,cAACF,EAAAC,EAAM6E,SAAP,KACE9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAASC,YAAU,GACjBhF,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAAA,MAAAZ,OAAAwD,OAAA,GACMF,EAAUG,eADhB,CAEEC,IAAKJ,EAAUK,SACfC,MAAO,CACLC,UAAW,SACXC,WAAYP,EAASQ,eAAiB,YAAc,QACpDC,QAAS,IACTC,UAIa,IAHXnE,EAAKS,MAAM0H,MAAM9D,OACf,SAAAuE,GAAI,OACgB,IAAlBA,EAAKC,UAAqBD,EAAKtE,UAAYkE,IAC7CxG,UAGLmG,EACE9D,OACC,SAAAuE,GAAI,OAAsB,IAAlBA,EAAKC,UAAqBD,EAAKtE,UAAYkE,IAEpDjE,UACAC,IAAI,SAACoE,EAAMnE,GACV,OACE7D,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEK,IAAKqF,EAAKlE,IACVC,YAAaiE,EAAKlE,IAClBD,MAAOA,GAEN,SAACG,EAAUnB,GACV,OACE7C,EAAAC,EAAAC,cAACgI,EAAD5I,OAAAwD,OAAA,CACEE,IAAKgB,EAASf,UACVe,EAASE,eACTF,EAASG,iBAEbnE,EAAAC,EAAAC,cAACkE,EAAA,EAAMC,IAAP,KACErE,EAAAC,EAAAC,cAACkE,EAAA,EAAMG,KAAP,CACErB,MAAO,CACLC,UAAW,SAEbuB,YAAU,GAEV1E,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,OAAO,EACPC,MAAO,QACP2D,KAAM,QACN1D,QAAS,kBACP7B,EAAKS,MAAMsI,aACTH,EAAKlE,IACLkE,EAAKC,WAGT9G,SAAUpC,IAAaiJ,EAAKjJ,YAGhCiB,EAAAC,EAAAC,cAACkI,EAAD,MACqB,IAAlBJ,EAAKC,SACJjI,EAAAC,EAAAC,cAAA,MACEgD,MAAO,CACLmF,eAAgB,iBAGjBL,EAAKtI,OAGRM,EAAAC,EAAAC,cAAA,UAAK8H,EAAKtI,QAIdM,EAAAC,EAAAC,cAACkE,EAAA,EAAMG,KAAP,CACErB,MAAO,CACLC,UAAW,SAEbuB,YAAU,GAEV1E,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,OAAO,EACPC,MAAO,MACP2D,KAAM,QACN1D,QAAS,kBACP7B,EAAKS,MAAMyI,WAAWN,EAAKlE,MAE7B3C,SAAUpC,IAAaiJ,EAAKjJ,gGAlPvD,IAAA8F,EAAA9E,KACP,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAM6E,SAAP,KACE9E,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAWC,MAAI,GACbR,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACO,EAAA,EAAKC,MAAN,KACEV,EAAAC,EAAAC,cAAA,SACEU,KAAK,OACLlB,MAAOK,KAAKF,MAAM2I,SAClB3H,SAAU,SAAA1B,GAAC,OAAI0F,EAAKhF,MAAM4I,UAAUtJ,OAGxCa,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,OAAO,EACPC,MAAO,QACPC,QAAS,kBAAM4D,EAAKhF,MAAM6I,QAAQ7D,EAAKhF,MAAM2I,WAC7CtH,QAAS,MACTyD,KAAM,UAGV3E,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOiB,QAAM,GACXrF,EAAAC,EAAAC,cAACkE,EAAA,EAAMkB,KAAP,KACGvF,KAAKuH,aAAavH,KAAKF,MAAM0H,MAAOxH,KAAKF,MAAMd,YAGpDiB,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAOiB,QAAM,GACXrF,EAAAC,EAAAC,cAACkE,EAAA,EAAMkB,KAAP,KACGvF,KAAKwI,qBAAqBxI,KAAKF,MAAM0H,MAAOxH,KAAKF,MAAMd,qBA7BlDwG,IAAMlE,WAyQpB6G,EAAW1C,IAAOC,IAAVkD,KAORP,EAAW5C,IAAOC,IAAVmD,0LCxQOC,6MACnB/J,MAAQ,CACNgK,WAAW,KAGbC,WAAa,WACX,IAAIvB,EAAMC,OAAOC,SAASC,KAEpBC,GADNJ,EAAMA,EAAIK,MAAM,MACGL,EAAIpG,OAAS,GAE5BW,EAAO,GACPiH,EAAQ,EACRzB,EAAQnI,EAAKS,MAAM0H,MACpB9D,OAAO,SAAAuE,GAAI,OAAsB,IAAlBA,EAAKC,UAAqBD,EAAKtE,UAAYkE,IAC1DhE,IAAI,SAAAoE,GACH,OAAO5I,EAAK6J,cAAcjB,EAAKkB,gBAEhCC,KAAK,SAAClJ,EAAGmJ,GAAJ,OAAUnJ,EAAImJ,IAiBtB,OAhBA7B,EAAM3D,IAAI,SAACoE,EAAMnE,GAcf,OAbImE,IAAST,EAAM1D,EAAQ,GACzBmF,KAEAA,IACAjH,EAAKsH,KAAK,CACRC,EAAGtB,EACHuB,EACGP,EACC5J,EAAKS,MAAM0H,MAAM9D,OAAO,SAAAuE,GAAI,OAAIA,EAAKtE,UAAYkE,IAAQxG,OAC3D,MAEJ4H,EAAQ,GAEHjH,IAEFA,KAGTkH,cAAgB,SAAAO,GACd,IAAMC,EAAS,CACbC,IAAK,KACLC,IAAK,KACLC,MAAO,KACPC,MAAO,KACPC,IAAK,KACLC,KAAM,KACNC,KAAM,KACNC,IAAK,KACLC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLC,IAAK,MAEPb,EAAOA,EAAK3B,MAAM,KAClB,IAAIyC,EAAY,GAOhB,OANAA,EAAUjB,KAAKG,EAAK,IAChBA,EAAK,KAAMC,IACbD,EAAK,GAAKC,EAAOD,EAAK,KAExBc,EAAUjB,KAAKG,EAAK,IACpBc,EAAUjB,KAAKG,EAAK,IACbc,EAAUC,KAAK,6EAGf,IAEDC,EADgBzK,KAAKjB,MAAnBgK,UACsB2B,IAA0BC,IACxD,OACE1K,EAAAC,EAAAC,cAACF,EAAAC,EAAM6E,SAAP,KACE9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAASC,YAAU,GACjBhF,EAAAC,EAAAC,cAAA,6BAEFF,EAAAC,EAAAC,cAACyK,EAAD,KACE3K,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,CACEC,MAAM,UACNjF,MAAO,IACPC,OAAQ,IACRiF,UAAW,IACXC,QAAS,CAAC,EAAG,MAEb/K,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,MACA5K,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,MACA5K,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,MACA5K,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,MACA5K,EAAAC,EAAAC,cAACsK,EAAD,CACElK,UAAU,8BACVyB,KAAMhC,KAAKgJ,yBArFSxD,IAAMlE,WA8FlCsJ,EAAQnF,IAAOC,IAAVuF,sHC4MIC,8MA5SbnM,MAAQ,CACNC,SAAU,GACVmM,MAAO,KACP7I,SAAU,GACVkF,MAAO,GACPrC,YAAa,GACbsD,SAAU,MAeZ2C,YAAc,WACZ,IAAMC,EAAQ9L,OAAA+L,EAAA,EAAA/L,CAAA,GAAQF,EAAKN,OAC3B6C,IACG2J,IAAI,uBACJzJ,KAAK,SAAA0J,GACJ,GAAIA,EAAIxJ,KAAM,CACZ,IAAIyJ,EAAQlM,OAAA+L,EAAA,EAAA/L,CAAA,GAAQF,EAAKN,OACzB0M,EAASnJ,SAAWkJ,EAAIxJ,KAAK0B,OAC3B,SAAAC,GAAO,OAAIA,EAAQ3E,WAAaK,EAAKN,MAAMC,WAE7CK,EAAKC,SAASmM,MAIjBC,MAAM,SAAAC,GACLtM,EAAKC,SAAS+L,QAIpBO,SAAW,WACT,IAAMP,EAAQ9L,OAAA+L,EAAA,EAAA/L,CAAA,GAAQF,EAAKN,OAC3B6C,IACG2J,IAAI,iBACJzJ,KAAK,SAAA0J,GACJ,GAAIA,EAAIxJ,KAAM,CACZ,IAAIyJ,EAAQlM,OAAA+L,EAAA,EAAA/L,CAAA,GAAQF,EAAKN,OACzB0M,EAASjE,MAAQgE,EAAIxJ,KAAK0B,OACxB,SAAAuE,GAAI,OAAIA,EAAKjJ,WAAaK,EAAKN,MAAMC,WAEvCK,EAAKC,SAASmM,MAGjBC,MAAM,SAAAC,GACLtM,EAAKC,SAAS+L,QAIpBhG,WAAa,SAAAF,GACXjD,QAAQC,IAAI,gBAAiBgD,GAC7B,IAAMxB,EAAU,CACd3E,SAAUK,EAAKN,MAAMC,SACrBW,MAAOwF,GAELxB,EAAQhE,OAASgE,EAAQhE,MAAM0B,OAAS,GAC1CO,IACGC,KAAK,sBAAuB8B,GAC5B7B,KAAK,SAAA0J,GACAA,EAAIxJ,OACN3C,EAAKC,SAAS,CAAE6F,YAAa,KAC7B9F,EAAK+L,iBAGRM,MAAM,SAAAC,GAAG,OAAIzJ,QAAQC,IAAIwJ,QAIhChD,QAAU,SAAAF,GACR,IAAMhB,EAAMC,OAAOC,SAASC,KACtBC,EAASJ,EAAIoE,OAAOpE,EAAIqE,YAAY,KAAO,GAC3C7D,EAAO,CACXjJ,SAAUK,EAAKN,MAAMC,SACrBW,MAAO8I,EACP9E,QAASkE,EACTK,UAAU,EACViB,aAAc4C,QAEZ9D,EAAKtI,OAASsI,EAAKtI,MAAM0B,OAAS,GACpCO,IACGC,KAAK,gBAAiBoG,GACtBnG,KAAK,SAAA0J,GACAA,EAAIxJ,OACN3C,EAAKC,SAAS,CAAEmJ,SAAU,KAC1BpJ,EAAKuM,cAGRF,MAAM,SAAAC,GAAG,OAAIzJ,QAAQC,IAAIwJ,QAIhC9G,cAAgB,SAAAmH,GACd,IAAMX,EAAQ9L,OAAA+L,EAAA,EAAA/L,CAAA,GAAQF,EAAKN,OAC3BM,EAAKC,SAAS,CACZgD,SAAUjD,EAAKN,MAAMuD,SAASoB,OAAO,SAAAC,GAAO,OAAIA,EAAQI,MAAQiI,MAElEpK,IACGqK,OADH,0BAAAvH,OACoCsH,IACjClK,KAAK,SAAA0J,GACAA,EAAIxJ,OAGT0J,MAAM,SAAAC,GAAG,OAAIzJ,QAAQC,IAAIwJ,KAC5BtM,EAAKC,SAAS,CAAE+L,gBAGlB9C,WAAa,SAAAyD,GACX,IAAMX,EAAQ9L,OAAA+L,EAAA,EAAA/L,CAAA,GAAQF,EAAKN,OAC3BM,EAAKC,SAAS,CAAEkI,MAAOnI,EAAKN,MAAMyI,MAAM9D,OAAO,SAAAuE,GAAI,OAAIA,EAAKlE,MAAQiI,MACpEpK,IACGqK,OADH,oBAAAvH,OAC8BsH,IAC3BlK,KAAK,SAAA0J,GACAA,EAAIxJ,OAGT0J,MAAM,SAAAC,GAAG,OAAIzJ,QAAQC,IAAIwJ,KAC5BtM,EAAKC,SAAS,CAAE+L,gBAGlBjD,aAAe,SAAC4D,EAAI9D,GAMlBA,EAAW,CAAEA,SAJXA,GADe,IAAbA,EAK6BiB,aAAc4C,QAC/CnK,IACGsK,IADH,sBAAAxH,OAC6BsH,GAAM9D,GAChCpG,KAAK,SAAA0J,GACAA,EAAIxJ,MACN3C,EAAKuM,aAGRF,MAAM,SAAAC,GAAG,OAAIzJ,QAAQC,IAAIwJ,QAG9B3D,SAAW,SAAAD,GACT,GAAiC,OAA7BA,EAAaoE,YAAjB,CACA,IAAMd,EAAQ9L,OAAA+L,EAAA,EAAA/L,CAAA,GAAQF,EAAKN,OACvB0M,EAAQlM,OAAA+L,EAAA,EAAA/L,CAAA,GAAQF,EAAKN,OACnBqN,EAASrE,EAAaqE,OAAOtI,MAC7BqI,EAAcpE,EAAaoE,YAAYrI,MACzCuI,EAAYZ,EAASjE,MAAM5D,UAGzBD,GADN0I,GADAA,EAAYZ,EAASjE,MAAM8E,OAAOF,EAAQ,IACpB,IACIzI,QAC1B8H,EAASjE,MAAM8E,OAAOH,EAAa,EAAGE,GACtCZ,EAASjE,MAAQiE,EAASjE,MAAM5D,UAChChC,IACGqK,OADH,wBAAAvH,OACkCf,IAC/B7B,KAAK,SAAA0J,GACAA,EAAIxJ,OACNJ,IACGsK,IADH,qBAAAxH,OAC4Bf,GAAW8H,EAASjE,OAC7CkE,MAAM,SAAAC,GAAG,OAAIzJ,QAAQC,IAAIwJ,KAC5BtM,EAAKC,SAAS,CAAE+L,gBAGnBK,MAAM,SAAAC,GAAG,OAAIzJ,QAAQC,IAAIwJ,KAC5BtM,EAAKC,SAAS,CAAE+L,iBAGlB3I,YAAc,SAAAD,GACZ,GAAoC,OAAhCA,EAAgB0J,YAApB,CACA,IAAMd,EAAQ9L,OAAA+L,EAAA,EAAA/L,CAAA,GAAQF,EAAKN,OACvB0M,EAAQlM,OAAA+L,EAAA,EAAA/L,CAAA,GAAQF,EAAKN,OACnBqN,EAAS3J,EAAgB2J,OAAOtI,MAChCqI,EAAc1J,EAAgB0J,YAAYrI,MAC5CyI,EAAed,EAASnJ,SAASsB,UAG/B5E,GADNuN,GADAA,EAAed,EAASnJ,SAASgK,OAAOF,EAAQ,IACpB,IACEpN,SAC9ByM,EAASnJ,SAASgK,OAAOH,EAAa,EAAGI,GACzCd,EAASnJ,SAAWmJ,EAASnJ,SAASsB,UACtChC,IACGqK,OADH,8BAAAvH,OACwC1F,IACrC8C,KAAK,SAAA0J,GACAA,EAAIxJ,OACNJ,IACGsK,IADH,2BAAAxH,OACkC1F,GAAYyM,EAASnJ,UACpDoJ,MAAM,SAAAC,GAAG,OAAIzJ,QAAQC,IAAIwJ,KAC5BtM,EAAKC,SAAS,CAAE+L,gBAGnBK,MAAM,SAAAC,GAAG,OAAIzJ,QAAQC,IAAIwJ,KAC5BtM,EAAKC,SAAS,CAAE+L,iBAGlBjG,aAAe,SAAAhG,GACbA,EAAES,iBACF,IAAMsF,EAAc/F,EAAEK,OAAOE,MAC7BN,EAAKC,SAAS,CAAE6F,mBAGlBuD,UAAY,SAAAtJ,GACVA,EAAES,iBACF,IAAM4I,EAAWrJ,EAAEK,OAAOE,MAC1BN,EAAKC,SAAS,CAAEmJ,uGApMQ+D,GACxB,GAAIA,EAAUC,KAAM,CAClB,IAAMhB,EAAQlM,OAAA+L,EAAA,EAAA/L,CAAA,GAAQS,KAAKjB,OAC3B0M,EAASzM,SAAWwN,EAAUC,KAAKzN,SACnCgB,KAAKV,SAASmM,EAAUzL,KAAKoL,YAAapL,KAAK4L,iBAE/C5L,KAAKV,SAASU,KAAK0M,+CAkMrB,IAAIjF,EAAMC,OAAOC,SAASC,KAEpBC,GADNJ,EAAMA,EAAIK,MAAM,MACGL,EAAIpG,OAAS,GAHzBM,EAIqB3B,KAAKjB,MAAzBC,EAJD2C,EAIC3C,SAAUmM,EAJXxJ,EAIWwJ,MAElB,OAAInL,KAAKjB,MAAMG,WACNe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAI,CAAEC,SAAUN,KAAKjB,MAAMG,cAG1CiM,EAEAlL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UAAKgL,IAINnM,EAYU,KAAX6I,EAEA5H,EAAAC,EAAAC,cAACF,EAAAC,EAAM6E,SAAP,KACE9E,EAAAC,EAAAC,cAACwM,EAAD,CACEtG,OAAQrG,KAAKF,MAAMuG,OACnBD,SAAUpG,KAAKF,MAAMsG,SACrB9D,SAAUtC,KAAKjB,MAAMuD,SACrBtD,SAAUgB,KAAKjB,MAAMC,SACrBqG,WAAYrF,KAAKqF,WACjBwB,cAAe7G,KAAK6G,cACpBhC,cAAe7E,KAAK6E,cACpBnC,YAAa1C,KAAK0C,YAClByC,YAAanF,KAAKjB,MAAMoG,YACxBC,aAAcpF,KAAKoF,eAErBnF,EAAAC,EAAAC,cAACyM,GAAD,KACE3M,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,kGAIAF,EAAAC,EAAAC,cAAA,2NAUNF,EAAAC,EAAAC,cAACF,EAAAC,EAAM6E,SAAP,KACE9E,EAAAC,EAAAC,cAACwM,EAAD,CACEtG,OAAQrG,KAAKF,MAAMuG,OACnBD,SAAUpG,KAAKF,MAAMsG,SACrB9D,SAAUtC,KAAKjB,MAAMuD,SACrBtD,SAAUgB,KAAKjB,MAAMC,SACrBqG,WAAYrF,KAAKqF,WACjBwB,cAAe7G,KAAK6G,cACpBhC,cAAe7E,KAAK6E,cACpBnC,YAAa1C,KAAK0C,YAClByC,YAAanF,KAAKjB,MAAMoG,YACxBC,aAAcpF,KAAKoF,eAErBnF,EAAAC,EAAAC,cAAC0M,EAAD,CAAMrF,MAAOxH,KAAKjB,MAAMyI,QACxBvH,EAAAC,EAAAC,cAAC2M,EAAD,CACEtF,MAAOxH,KAAKjB,MAAMyI,MAClBxI,SAAUgB,KAAKjB,MAAMC,SACrB2J,QAAS3I,KAAK2I,QACdoE,WAAY/M,KAAK+M,WACjBxE,WAAYvI,KAAKuI,WACjBH,aAAcpI,KAAKoI,aACnBJ,SAAUhI,KAAKgI,SACfS,SAAUzI,KAAKjB,MAAM0J,SACrBC,UAAW1I,KAAK0I,aAhElBzI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAWC,MAAI,GACbR,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMpE,GAAG,UACPJ,EAAAC,EAAAC,cAAA,kCA1OKmB,aA+SbsL,GAAWnH,IAAOC,IAAVsH,KClOCC,8MA/EblO,MAAQ,CACNqH,UAAU,EACVqG,KAAM,QAGRS,kBAAoB,WAClBtL,IAAM2J,IAAI,cAAczJ,KAAK,SAAAC,GACrBA,EAASC,KAAKyK,KAClBpN,EAAKC,SAAS,CACZ8G,UAAU,EACVqG,KAAM1K,EAASC,KAAKyK,OAGtBpN,EAAKC,SAAS,CACZ8G,UAAU,EACVqG,KAAM,YAMdpG,OAAS,SAAA5E,GACPA,EAAM5B,iBACN+B,IAAMC,KAAK,gBAAgBC,KAAK,SAAAC,GACN,MAApBA,EAASoL,QACX9N,EAAKC,SAAS,CACZ8G,UAAU,EACVqG,KAAM,YAMd1M,MAAQ,SAACf,EAAUC,GACjB2C,IACGC,KAAK,cAAe,CACnB7C,WACAC,aAED6C,KAAK,SAAAC,GACoB,MAApBA,EAASoL,QAEX9N,EAAKC,SAAS,CACZ8G,UAAU,EACVqG,KAAM1K,EAASC,KAAKyK,kFAMrB,IAAA3H,EAAA9E,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAEbN,EAAAC,EAAAC,cAACiN,EAAA,EAAD,CACEC,KAAK,IACLC,OAAQ,kBACNrN,EAAAC,EAAAC,cAACoN,GAAD,CACEd,KAAM3H,EAAK/F,MAAM0N,KACjBpG,OAAQvB,EAAKuB,OACbD,SAAUtB,EAAK/F,MAAMqH,cAI3BnG,EAAAC,EAAAC,cAACiN,EAAA,EAAD,CACEI,OAAK,EACLH,KAAK,SACLC,OAAQ,kBAAMrN,EAAAC,EAAAC,cAACsN,EAAD,CAAO1N,MAAO+E,EAAK/E,WAEnCE,EAAAC,EAAAC,cAACiN,EAAA,EAAD,CACEI,OAAK,EACLH,KAAK,UACLC,OAAQ,kBAAMrN,EAAAC,EAAAC,cAACuN,EAAD,CAAQ3N,MAAO+E,EAAK/E,mBAzE1BuB,uBCAlBqM,IAASL,OACPrN,EAAAC,EAAAC,cAACyN,GAAA,EAAD,KACE3N,EAAAC,EAAAC,cAAC0N,GAAD,OAEFC,SAASC,eAAe","file":"static/js/main.a58b85d9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Container } from \"semantic-ui-react\";\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    redirectTo: null\n  };\n\n  writeText = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  logIn = e => {\n    e.preventDefault();\n    this.props.login(this.state.username, this.state.password);\n    this.setState({\n      redirectTo: \"/\"\n    });\n  };\n\n  render() {\n    if (this.state.redirectTo) {\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\n    } else {\n      return (\n        <div className=\"CustomForm\">\n          <Container text>\n            <h1>Login form</h1>\n            <Form>\n              <Form.Field>\n                <label htmlFor=\"username\">Username: </label>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.writeText}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label htmlFor=\"password\">Password: </label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.writeText}\n                />\n              </Form.Field>\n              <Button\n                basic={true}\n                color={\"blue\"}\n                onClick={this.logIn}\n                content={\"Login\"}\n                disabled={\n                  this.state.username.length === 0 ||\n                  this.state.password.length === 0\n                }\n              />\n            </Form>\n          </Container>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Container } from \"semantic-ui-react\";\n\nclass Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    redirectTo: null\n  };\n\n  writeText = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  signUp = event => {\n    const { username, password, confirmPassword } = this.state;\n    event.preventDefault();\n    if (\n      username &&\n      username.length > 0 &&\n      password &&\n      password.length > 0 &&\n      confirmPassword &&\n      confirmPassword.length > 0\n    ) {\n      axios\n        .post(\"/auth/signup\", {\n          username: this.state.username,\n          password: this.state.password\n        })\n        .then(response => {\n          if (!response.data.errmsg) {\n            // this.props.login(this.state.username, this.state.password);\n            this.setState({\n              redirectTo: \"/\"\n            });\n          } else {\n            console.log(response.data.errmsg);\n          }\n        });\n    }\n  };\n  render() {\n    if (this.state.redirectTo) {\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\n    }\n    return (\n      <div className=\"CustomForm\">\n        <Container text>\n          <h1>Signup form</h1>\n          <Form>\n            <Form.Field>\n              <label htmlFor=\"username\">Username: </label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.writeText}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label htmlFor=\"password\">Password: </label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.writeText}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label htmlFor=\"confirmPassword\">Confirm Password: </label>\n              <input\n                type=\"password\"\n                name=\"confirmPassword\"\n                value={this.state.confirmPassword}\n                onChange={this.writeText}\n              />\n            </Form.Field>\n            <Button\n              basic={true}\n              color={\"blue\"}\n              onClick={this.signUp}\n              content={\"Sign Up\"}\n              disabled={\n                this.state.username.length === 0 ||\n                this.state.password.length === 0 ||\n                this.state.confirmPassword.length === 0\n              }\n            />\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from \"react\";\nimport { Container, Button, Form, Table, Divider } from \"semantic-ui-react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nclass Projects extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Link to=\"/\" className=\"nav-link\">\n          <h1>HOME</h1>\n        </Link>\n        <h1>Projects</h1>\n        <Divider horizontal>\n          <h3>Add New Projects Here:</h3>\n        </Divider>\n        <Container text style={containerStyle}>\n          <Form>\n            <Form.Field>\n              <input\n                type=\"text\"\n                value={this.props.projectText}\n                onChange={e => this.props.writeProject(e)}\n              />\n            </Form.Field>\n            <Button\n              basic={true}\n              color={\"green\"}\n              onClick={() => this.props.addProject(this.props.projectText)}\n              content={\"Add\"}\n              icon={\"plus\"}\n            />\n          </Form>\n          <Table celled>\n            <Table.Body>\n              {this.displayProjects(this.props.projects, this.props.username)}\n            </Table.Body>\n          </Table>\n        </Container>\n      </React.Fragment>\n    );\n  }\n\n  displayProjects = (projects, username) => {\n    return (\n      <DragDropContext\n        onDragEnd={projectLocation => this.props.moveProject(projectLocation)}\n      >\n        <Droppable droppableId={\"projectBoard\"} key={\"projectBoard\"}>\n          {(provieded, snapshot) => {\n            return (\n              <div\n                {...provieded.droppableProps}\n                ref={provieded.innerRef}\n                style={{\n                  textAlign: \"center\",\n                  background: snapshot.isDraggingOver ? \"lightblue\" : \"white\",\n                  padding: 100,\n                  minHeight: this.props.projects.length * 210,\n                  minWidth: 400\n                }}\n              >\n                {projects\n                  .filter(project => project.username === this.props.username)\n                  .reverse()\n                  .map((project, index) => {\n                    return (\n                      <Draggable\n                        key={project._id}\n                        draggableId={project._id}\n                        index={index}\n                      >\n                        {(provided, snapshot) => {\n                          return (\n                            <ProjectItem\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <Table.Row style={{ background: \"white\" }}>\n                                <ProjectText>\n                                  <Table.Cell>\n                                    <Link to={`${project._id}`}>\n                                      <h2>{project.value}</h2>\n                                    </Link>\n                                  </Table.Cell>\n                                </ProjectText>\n                                <Table.Cell\n                                  style={{\n                                    textAlign: \"right\"\n                                  }}\n                                  collapsing\n                                >\n                                  <Button\n                                    basic={true}\n                                    color={\"red\"}\n                                    icon={\"trash\"}\n                                    onClick={() =>\n                                      this.props.deleteProject(project._id)\n                                    }\n                                    disabled={username !== project.username}\n                                  />\n                                </Table.Cell>\n                              </Table.Row>\n                            </ProjectItem>\n                          );\n                        }}\n                      </Draggable>\n                    );\n                  })}\n              </div>\n            );\n          }}\n        </Droppable>\n      </DragDropContext>\n    );\n  };\n}\n\nexport default Projects;\n\nconst ProjectItem = styled.div`\n  text-align: center;\n  margin: auto;\n  display: block;\n  overflow: hidden;\n  background-color: white;\n`;\n\nconst ProjectText = styled.div`\n  text-align: center;\n  display: block;\n  margin: auto;\n  min-width: 200px\n  background-color: white;\n`;\n\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n  verticalAlign: \"middle\"\n};\n","import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport Projects from \"./Projects\";\nimport Sidebar from \"react-sidebar\";\n\nclass Menu extends React.Component {\n  state = {\n    sidebarOpen: false\n  };\n\n  onSetSidebarOpen = open => {\n    this.setState({ sidebarOpen: open });\n  };\n\n  render() {\n    if (this.props.loggedIn && this.state.sidebarOpen === false) {\n      return (\n        <ul className=\"nav\">\n          <li>\n            <Link to=\"/login\" className=\"nav-link\" onClick={this.props.logout}>\n              Logout\n            </Link>\n          </li>\n          <ProjectMenuClosed>\n            <li>\n              <button onClick={() => this.onSetSidebarOpen(true)}>\n                <FontAwesomeIcon icon={faBars} />\n              </button>\n            </li>\n          </ProjectMenuClosed>\n        </ul>\n      );\n    } else if (this.props.loggedIn && this.state.sidebarOpen === true) {\n      return (\n        <React.Fragment>\n          <ul className=\"nav\">\n            <li></li>\n            <li>\n              <Link\n                to=\"/login\"\n                className=\"nav-link\"\n                onClick={this.props.logout}\n              >\n                Logout\n              </Link>\n            </li>\n          </ul>\n          <Sidebar\n            sidebar={\n              <b>\n                <ul className=\"nav\">\n                  <ProjectMenuOpen>\n                    <button onClick={() => this.onSetSidebarOpen(false)}>\n                      <FontAwesomeIcon icon={faBars} />\n                    </button>\n                  </ProjectMenuOpen>\n                </ul>\n                <Projects\n                  projects={this.props.projects}\n                  username={this.props.username}\n                  addProject={this.props.addProject}\n                  updateProject={this.props.updateProject}\n                  deleteProject={this.props.deleteProject}\n                  moveProject={this.props.moveProject}\n                  projectText={this.props.projectText}\n                  writeProject={this.props.writeProject}\n                />\n              </b>\n            }\n            open={this.state.sidebarOpen}\n            onSetOpen={this.onSetSidebarOpen}\n            styles={sidebarStyles}\n          ></Sidebar>\n        </React.Fragment>\n      );\n    }\n    if (!this.props.loggedIn) {\n      return (\n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/login\" className=\"nav-link\">\n              Login\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/signup\" className=\"nav-link\">\n              Sign up\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n}\n\nexport default Menu;\n\nconst ProjectMenuClosed = styled.div`\n  float: left;\n  width: 100px;\n  height: 100%;\n  margin: 10px;\n  border-right: 1px solid black;\n`;\n\nconst ProjectMenuOpen = styled.div`\n  float: left;\n  width: 157px;\n  height: 100%;\n  margin: 10px;\n  border-right: 1px solid black;\n`;\n\nconst sidebarStyles = {\n  sidebar: {\n    margin: \"auto\",\n    background: \"white\",\n    width: 400,\n    top: 0,\n    bottom: 0\n  }\n};\n","import React from \"react\";\nimport { Container, Button, Form, Table, Divider } from \"semantic-ui-react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\n\nclass Todos extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Todos</h1>\n        <Container text>\n          <Form>\n            <Form.Field>\n              <input\n                type=\"text\"\n                value={this.props.todoText}\n                onChange={e => this.props.writeTodo(e)}\n              />\n            </Form.Field>\n            <Button\n              basic={true}\n              color={\"green\"}\n              onClick={() => this.props.addTodo(this.props.todoText)}\n              content={\"Add\"}\n              icon={\"plus\"}\n            />\n          </Form>\n          <Table celled>\n            <Table.Body>\n              {this.displayTodos(this.props.todos, this.props.username)}\n            </Table.Body>\n          </Table>\n          <Table celled>\n            <Table.Body>\n              {this.displayCompleteTodos(this.props.todos, this.props.username)}\n            </Table.Body>\n          </Table>\n        </Container>\n      </React.Fragment>\n    );\n  }\n\n  displayTodos = (todos, username) => {\n    let URL = window.location.href;\n    URL = URL.split(\"/\");\n    const endURL = URL[URL.length - 1];\n\n    return (\n      <DragDropContext\n        onDragEnd={todoLocation => this.props.moveTodo(todoLocation)}\n      >\n        <Droppable droppableId={\"todoBoard\"} key={\"todoBoard\"}>\n          {(provieded, snapshot) => {\n            return (\n              <div\n                {...provieded.droppableProps}\n                ref={provieded.innerRef}\n                style={{\n                  textAlign: \"center\",\n                  background: snapshot.isDraggingOver ? \"lightblue\" : \"white\",\n                  padding: 100,\n                  minHeight:\n                    this.props.todos.filter(\n                      todo => todo.complete === false && todo.project === endURL\n                    ).length * 210\n                }}\n              >\n                {todos\n                  .filter(\n                    todo => todo.complete === false && todo.project === endURL\n                  )\n                  .reverse()\n                  .map((todo, index) => {\n                    return (\n                      <Draggable\n                        key={todo._id}\n                        draggableId={todo._id}\n                        index={index}\n                      >\n                        {(provided, snapshot) => {\n                          return (\n                            <TodoItem\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <Table.Row>\n                                <Table.Cell\n                                  style={{\n                                    textAlign: \"right\"\n                                  }}\n                                  collapsing\n                                >\n                                  <Button\n                                    basic={true}\n                                    color={\"green\"}\n                                    icon={\"check\"}\n                                    onClick={() =>\n                                      this.props.completeTodo(\n                                        todo._id,\n                                        todo.complete\n                                      )\n                                    }\n                                    disabled={username !== todo.username}\n                                  />\n                                </Table.Cell>\n                                <TodoText>\n                                  {/* <Table.Cell> */}\n                                  {todo.complete === true ? (\n                                    <h2\n                                      style={{\n                                        textDecoration: \"line-through\"\n                                      }}\n                                    >\n                                      {todo.value}\n                                    </h2>\n                                  ) : (\n                                    <h2>{todo.value}</h2>\n                                  )}\n                                  {/* </Table.Cell> */}\n                                </TodoText>\n                                <Table.Cell\n                                  style={{\n                                    textAlign: \"right\"\n                                  }}\n                                  collapsing\n                                >\n                                  <Button\n                                    basic={true}\n                                    color={\"red\"}\n                                    icon={\"trash\"}\n                                    onClick={() =>\n                                      this.props.deleteTodo(todo._id)\n                                    }\n                                    disabled={username !== todo.username}\n                                  />\n                                </Table.Cell>\n                              </Table.Row>\n                            </TodoItem>\n                          );\n                        }}\n                      </Draggable>\n                    );\n                  })}\n              </div>\n            );\n          }}\n        </Droppable>\n      </DragDropContext>\n    );\n  };\n\n  displayCompleteTodos = (todos, username) => {\n    let URL = window.location.href;\n    URL = URL.split(\"/\");\n    const endURL = URL[URL.length - 1];\n\n    return (\n      <DragDropContext\n        onDragEnd={todoLocation => this.props.moveTodo(todoLocation)}\n      >\n        <Droppable droppableId={\"todoBoard\"} key={\"todoBoard\"}>\n          {(provieded, snapshot) => {\n            return (\n              <React.Fragment>\n                <Divider horizontal>\n                  <h1>COMPLETED</h1>\n                </Divider>\n                <div\n                  {...provieded.droppableProps}\n                  ref={provieded.innerRef}\n                  style={{\n                    textAlign: \"center\",\n                    background: snapshot.isDraggingOver ? \"lightblue\" : \"white\",\n                    padding: 100,\n                    minHeight:\n                      this.props.todos.filter(\n                        todo =>\n                          todo.complete === true && todo.project === endURL\n                      ).length * 210\n                  }}\n                >\n                  {todos\n                    .filter(\n                      todo => todo.complete === true && todo.project === endURL\n                    )\n                    .reverse()\n                    .map((todo, index) => {\n                      return (\n                        <Draggable\n                          key={todo._id}\n                          draggableId={todo._id}\n                          index={index}\n                        >\n                          {(provided, snapshot) => {\n                            return (\n                              <TodoItem\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                              >\n                                <Table.Row>\n                                  <Table.Cell\n                                    style={{\n                                      textAlign: \"right\"\n                                    }}\n                                    collapsing\n                                  >\n                                    <Button\n                                      basic={true}\n                                      color={\"green\"}\n                                      icon={\"check\"}\n                                      onClick={() =>\n                                        this.props.completeTodo(\n                                          todo._id,\n                                          todo.complete\n                                        )\n                                      }\n                                      disabled={username !== todo.username}\n                                    />\n                                  </Table.Cell>\n                                  <TodoText>\n                                    {todo.complete === true ? (\n                                      <h2\n                                        style={{\n                                          textDecoration: \"line-through\"\n                                        }}\n                                      >\n                                        {todo.value}\n                                      </h2>\n                                    ) : (\n                                      <h2>{todo.value}</h2>\n                                    )}\n                                    {/* </Table.Cell> */}\n                                  </TodoText>\n                                  <Table.Cell\n                                    style={{\n                                      textAlign: \"right\"\n                                    }}\n                                    collapsing\n                                  >\n                                    <Button\n                                      basic={true}\n                                      color={\"red\"}\n                                      icon={\"trash\"}\n                                      onClick={() =>\n                                        this.props.deleteTodo(todo._id)\n                                      }\n                                      disabled={username !== todo.username}\n                                    />\n                                  </Table.Cell>\n                                </Table.Row>\n                              </TodoItem>\n                            );\n                          }}\n                        </Draggable>\n                      );\n                    })}\n                </div>\n              </React.Fragment>\n            );\n          }}\n        </Droppable>\n      </DragDropContext>\n    );\n  };\n}\n\nexport default Todos;\n\nconst TodoItem = styled.div`\n  text-align: center;\n  display: inline-block;\n  overflow: hidden;\n  width: 430px;\n  background-color: white;\n`;\nconst TodoText = styled.div`\n  text-align: center;\n  display: block;\n  width: 300px;\n  background-color: white;\n  margin: 0px;\n`;\n","import React from \"react\";\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  VerticalBarSeries,\n  VerticalBarSeriesCanvas\n} from \"react-vis\";\nimport styled from \"styled-components\";\nimport { Divider } from \"semantic-ui-react\";\n\nexport default class Line extends React.Component {\n  state = {\n    useCanvas: false\n  };\n\n  graphMaker = () => {\n    let URL = window.location.href;\n    URL = URL.split(\"/\");\n    const endURL = URL[URL.length - 1];\n\n    let data = [];\n    let count = 0;\n    let todos = this.props.todos\n      .filter(todo => todo.complete === true && todo.project === endURL)\n      .map(todo => {\n        return this.dateConverter(todo.completeDate);\n      })\n      .sort((a, b) => a - b);\n    todos.map((todo, index) => {\n      if (todo === todos[index + 1]) {\n        count++;\n      } else {\n        count++;\n        data.push({\n          x: todo,\n          y:\n            (count /\n              this.props.todos.filter(todo => todo.project === endURL).length) *\n            100\n        });\n        count = 0;\n      }\n      return data;\n    });\n    return data;\n  };\n\n  dateConverter = date => {\n    const months = {\n      Jan: \"01\",\n      Feb: \"02\",\n      March: \"03\",\n      April: \"04\",\n      May: \"05\",\n      June: \"06\",\n      July: \"07\",\n      Aug: \"08\",\n      Sept: \"09\",\n      Oct: \"10\",\n      Nov: \"11\",\n      Dec: \"12\"\n    };\n    date = date.split(\" \");\n    let finalDate = [];\n    finalDate.push(date[3]);\n    if (date[1] in months) {\n      date[1] = months[date[1]];\n    }\n    finalDate.push(date[1]);\n    finalDate.push(date[2]);\n    return finalDate.join(\"\");\n  };\n\n  render() {\n    const { useCanvas } = this.state;\n    const BarSeries = useCanvas ? VerticalBarSeriesCanvas : VerticalBarSeries;\n    return (\n      <React.Fragment>\n        <Divider horizontal>\n          <h3>Progress Meter</h3>\n        </Divider>\n        <Chart>\n          <XYPlot\n            xType=\"ordinal\"\n            width={700}\n            height={300}\n            xDistance={1000}\n            yDomain={[0, 100]}\n          >\n            <VerticalGridLines />\n            <HorizontalGridLines />\n            <XAxis />\n            <YAxis />\n            <BarSeries\n              className=\"vertical-bar-series-example\"\n              data={this.graphMaker()}\n            />\n          </XYPlot>\n        </Chart>\n      </React.Fragment>\n    );\n  }\n}\n\nconst Chart = styled.div`\n  text-align: center;\n  display: inline-block;\n  margin-right: 6px;\n  background-color: #eee;\n`;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { Container } from \"semantic-ui-react\";\nimport Menu from \"./Menu\";\nimport Todos from \"./Todos\";\nimport Line from \"./Line\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nclass Home extends Component {\n  state = {\n    username: \"\",\n    error: null,\n    projects: [],\n    todos: [],\n    projectText: \"\",\n    todoText: \"\"\n  };\n\n  //grabs user data\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.user) {\n      const newState = { ...this.state };\n      newState.username = nextProps.user.username;\n      this.setState(newState, this.getProjects, this.getTodos());\n    } else {\n      this.setState(this.defaultState);\n    }\n  }\n\n  //grabs all projects\n  getProjects = () => {\n    const oldState = { ...this.state };\n    axios\n      .get(\"/project/getProject\")\n      .then(res => {\n        if (res.data) {\n          let newState = { ...this.state };\n          newState.projects = res.data.filter(\n            project => project.username === this.state.username\n          );\n          this.setState(newState);\n          // console.log(this.state.projects);\n        }\n      })\n      .catch(err => {\n        this.setState(oldState);\n      });\n  };\n  //grabs all todos\n  getTodos = () => {\n    const oldState = { ...this.state };\n    axios\n      .get(\"/todo/getTodo\")\n      .then(res => {\n        if (res.data) {\n          let newState = { ...this.state };\n          newState.todos = res.data.filter(\n            todo => todo.username === this.state.username\n          );\n          this.setState(newState);\n        }\n      })\n      .catch(err => {\n        this.setState(oldState);\n      });\n  };\n\n  addProject = projectText => {\n    console.log(\"project added\", projectText);\n    const project = {\n      username: this.state.username,\n      value: projectText\n    };\n    if (project.value && project.value.length > 0) {\n      axios\n        .post(\"/project/addProject\", project)\n        .then(res => {\n          if (res.data) {\n            this.setState({ projectText: \"\" });\n            this.getProjects();\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  };\n\n  addTodo = todoText => {\n    const URL = window.location.href;\n    const endURL = URL.substr(URL.lastIndexOf(\"/\") + 1);\n    const todo = {\n      username: this.state.username,\n      value: todoText,\n      project: endURL,\n      complete: false,\n      completeDate: Date()\n    };\n    if (todo.value && todo.value.length > 0) {\n      axios\n        .post(\"/todo/addTodo\", todo)\n        .then(res => {\n          if (res.data) {\n            this.setState({ todoText: \"\" });\n            this.getTodos();\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  };\n\n  deleteProject = id => {\n    const oldState = { ...this.state };\n    this.setState({\n      projects: this.state.projects.filter(project => project._id !== id)\n    });\n    axios\n      .delete(`/project/deleteProject/${id}`)\n      .then(res => {\n        if (res.data) {\n        }\n      })\n      .catch(err => console.log(err));\n    this.setState({ oldState });\n  };\n\n  deleteTodo = id => {\n    const oldState = { ...this.state };\n    this.setState({ todos: this.state.todos.filter(todo => todo._id !== id) });\n    axios\n      .delete(`/todo/deleteTodo/${id}`)\n      .then(res => {\n        if (res.data) {\n        }\n      })\n      .catch(err => console.log(err));\n    this.setState({ oldState });\n  };\n\n  completeTodo = (id, complete) => {\n    if (complete === true) {\n      complete = false;\n    } else {\n      complete = true;\n    }\n    complete = { complete: complete, completeDate: Date() };\n    axios\n      .put(`/todo/completeTodo/${id}`, complete)\n      .then(res => {\n        if (res.data) {\n          this.getTodos();\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  moveTodo = todoLocation => {\n    if (todoLocation.destination === null) return;\n    const oldState = { ...this.state };\n    let newState = { ...this.state };\n    const source = todoLocation.source.index;\n    const destination = todoLocation.destination.index;\n    let movedTodo = newState.todos.reverse();\n    movedTodo = newState.todos.splice(source, 1);\n    movedTodo = movedTodo[0];\n    const project = movedTodo.project;\n    newState.todos.splice(destination, 0, movedTodo);\n    newState.todos = newState.todos.reverse();\n    axios\n      .delete(`/todo/moveTodoDelete/${project}`)\n      .then(res => {\n        if (res.data) {\n          axios\n            .put(`/todo/moveTodoAdd/${project}`, newState.todos)\n            .catch(err => console.log(err));\n          this.setState({ oldState });\n        }\n      })\n      .catch(err => console.log(err));\n    this.setState({ oldState });\n  };\n\n  moveProject = projectLocation => {\n    if (projectLocation.destination === null) return;\n    const oldState = { ...this.state };\n    let newState = { ...this.state };\n    const source = projectLocation.source.index;\n    const destination = projectLocation.destination.index;\n    let movedProject = newState.projects.reverse();\n    movedProject = newState.projects.splice(source, 1);\n    movedProject = movedProject[0];\n    const username = movedProject.username;\n    newState.projects.splice(destination, 0, movedProject);\n    newState.projects = newState.projects.reverse();\n    axios\n      .delete(`/project/moveProjectDelete/${username}`)\n      .then(res => {\n        if (res.data) {\n          axios\n            .put(`/project/moveProjectAdd/${username}`, newState.projects)\n            .catch(err => console.log(err));\n          this.setState({ oldState });\n        }\n      })\n      .catch(err => console.log(err));\n    this.setState({ oldState });\n  };\n\n  writeProject = e => {\n    e.preventDefault();\n    const projectText = e.target.value;\n    this.setState({ projectText });\n  };\n\n  writeTodo = e => {\n    e.preventDefault();\n    const todoText = e.target.value;\n    this.setState({ todoText });\n  };\n\n  render() {\n    let URL = window.location.href;\n    URL = URL.split(\"/\");\n    const endURL = URL[URL.length - 1];\n    const { username, error } = this.state;\n\n    if (this.state.redirectTo) {\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\n    }\n\n    if (error)\n      return (\n        <div>\n          <h3>ERROR HAPPENED</h3>\n          <h5>{error}</h5>\n        </div>\n      );\n\n    if (!username) {\n      return (\n        <div className=\"CustomForm\">\n          <Container text>\n            <h1>Please, Log In</h1>\n            <Link to=\"/login\">\n              <h2>Login Here</h2>\n            </Link>\n          </Container>\n        </div>\n      );\n    }\n    if (endURL === \"\")\n      return (\n        <React.Fragment>\n          <Menu\n            logout={this.props.logout}\n            loggedIn={this.props.loggedIn}\n            projects={this.state.projects}\n            username={this.state.username}\n            addProject={this.addProject}\n            updateProject={this.updateProject}\n            deleteProject={this.deleteProject}\n            moveProject={this.moveProject}\n            projectText={this.state.projectText}\n            writeProject={this.writeProject}\n          />\n          <HomeText>\n            <h1>Hello Welcome To Progress Tracker</h1>\n            <h2>\n              This app is designed to track and measure your progress as you\n              complete assignments.\n            </h2>\n            <h2>\n              It's very easy to get started. Simply click the top left menu and\n              create your first project. From there, you will be able add\n              different tasks and they will be tracked, per each day, as you\n              complete them.\n            </h2>\n          </HomeText>\n        </React.Fragment>\n      );\n    return (\n      <React.Fragment>\n        <Menu\n          logout={this.props.logout}\n          loggedIn={this.props.loggedIn}\n          projects={this.state.projects}\n          username={this.state.username}\n          addProject={this.addProject}\n          updateProject={this.updateProject}\n          deleteProject={this.deleteProject}\n          moveProject={this.moveProject}\n          projectText={this.state.projectText}\n          writeProject={this.writeProject}\n        />\n        <Line todos={this.state.todos} />\n        <Todos\n          todos={this.state.todos}\n          username={this.state.username}\n          addTodo={this.addTodo}\n          updateTodo={this.updateTodo}\n          deleteTodo={this.deleteTodo}\n          completeTodo={this.completeTodo}\n          moveTodo={this.moveTodo}\n          todoText={this.state.todoText}\n          writeTodo={this.writeTodo}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n\nconst HomeText = styled.div`\n  margin: auto;\n  max-width: 800px;\n`;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Home from \"./components/Home\";\nclass App extends Component {\n  state = {\n    loggedIn: false,\n    user: null\n  };\n\n  componentDidMount = () => {\n    axios.get(\"/auth/user\").then(response => {\n      if (!!response.data.user) {\n        this.setState({\n          loggedIn: true,\n          user: response.data.user\n        });\n      } else {\n        this.setState({\n          loggedIn: false,\n          user: null\n        });\n      }\n    });\n  };\n\n  logout = event => {\n    event.preventDefault();\n    axios.post(\"/auth/logout\").then(response => {\n      if (response.status === 200) {\n        this.setState({\n          loggedIn: false,\n          user: null\n        });\n      }\n    });\n  };\n\n  login = (username, password) => {\n    axios\n      .post(\"/auth/login\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.status === 200) {\n          // update the state\n          this.setState({\n            loggedIn: true,\n            user: response.data.user\n          });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <Menu logout={this.logout} loggedIn={this.state.loggedIn} /> */}\n        <Route\n          path=\"/\"\n          render={() => (\n            <Home\n              user={this.state.user}\n              logout={this.logout}\n              loggedIn={this.state.loggedIn}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={() => <Login login={this.login} />}\n        />\n        <Route\n          exact\n          path=\"/signup\"\n          render={() => <Signup login={this.login} />}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n// import \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import styled from \"styled-components\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// const body = styled.div`\n//   text-align: center;\n//   justify-todo: center;\n//   height: 100%;\n// `;\n\n// body {\n//   margin: 0;\n//   padding: 0;\n//   font-family: sans-serif;\n// }\n\nif (module.hot) module.hot.accept();\n"],"sourceRoot":""}